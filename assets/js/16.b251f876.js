(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{427:function(t,s,v){"use strict";v.r(s);var _=v(7),r=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_0-前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-前言"}},[t._v("#")]),t._v(" 0. 前言")]),t._v(" "),s("p",[t._v("在前端开发中，组件是一种常用的代码复用方式。它将 UI 元素和相关的逻辑代码封装在一起，可以让我们更加高效地开发和维护应用程序。")]),t._v(" "),s("p",[t._v("例如下面这个聊天程序")]),t._v(" "),s("ul",[s("li",[t._v("如果我们将"),s("strong",[t._v("一个页面中所有的处理逻辑全部放在一起")]),t._v("，处理起来就会变得"),s("strong",[t._v("非常复杂")]),t._v("，而且"),s("strong",[t._v("不利于后续的管理以及扩展")]),t._v("；")]),t._v(" "),s("li",[t._v("但如果我们将"),s("strong",[t._v("一个页面拆分成一个个小的功能块")]),t._v("，每个功能块完成属于"),s("strong",[t._v("自己这部分独立的功能")]),t._v("，那么之后整个页面的"),s("strong",[t._v("管理和维护")]),t._v("就变得非常容易了；")]),t._v(" "),s("li",[t._v("如果我们将一个个功能块拆分后，就可以"),s("strong",[t._v("像搭积木一样来搭建我们的项目")]),t._v("了。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://api.onedrive.com/v1.0/shares/s!AsQmQbRb5c66hnpjw0UnlDdy9x9v/root/content",alt:"组件化思想"}})]),t._v(" "),s("p",[t._v("然而，随着项目的不断发展，前端组件的数量也会越来越多，而且很多时候缺乏一个统一的文档管理工具，这就使得组件的维护和使用变得困难和繁琐。因此，我们决定使用 VuePress 来搭建一个前端组件文档站点，以便更好地管理和使用我们的前端组件。")])])}),[],!1,null,null,null);s.default=r.exports}}]);